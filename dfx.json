{
  "canisters": {
    "internet_identity": {
      "type": "pull",
      "id": "rdmx6-jaaaa-aaaaa-aaadq-cai"
    },
    "llm": {
      "type": "pull",
      "id": "w36hm-eqaaa-aaaal-qr76a-cai"
    },
    "icp_ledger": {
      "type": "custom",
      "candid": "https://github.com/dfinity/ic/releases/download/ledger-suite-icp-2025-08-15/ledger.did",
      "wasm": "https://github.com/dfinity/ic/releases/download/ledger-suite-icp-2025-08-15/ledger-canister_notify-method.wasm.gz",
      "remote": {
        "id": {
          "ic": "ryjl3-tyaaa-aaaaa-aaaba-cai"
        }
      },
      "init_arg": "(variant { Init = record { minting_account = \"487e0cafd685bb3468f42b897c6ddb1c95eecaf1b6aa14a9df2fb525b6fc633a\"; initial_values = vec { record { \"8948e6ef5e46ccde67daef4c21b3c1c6435eb018f669d6a11a8a3ca2b78d0f1f\"; record { e8s = 10_000_000_000 : nat64; }; }; }; send_whitelist = vec {}; transfer_fee = opt record { e8s = 10_000 : nat64; }; token_symbol = opt \"LICP\"; token_name = opt \"Local ICP\"; } })"
    },
    "backend": {
      "dependencies": ["llm"],
      "type": "motoko",
      "main": "src/backend/main.mo",
      "specified_id": "bw4dl-smaaa-aaaaa-qaacq-cai"
    },
    "frontend": {
      "dependencies": ["backend"],
      "type": "assets",
      "source": ["src/frontend/dist/"],
      "specified_id": "b77ix-eeaaa-aaaaa-qaada-cai"
    },
    "agentic-backend": {
      "type": "custom",
      "build": "bash build-python-canister.sh '' agentic-backend",
      "candid": ".kybra/agentic-backend/agentic-backend.did",
      "wasm": ".kybra/agentic-backend/agentic-backend.wasm",
      "gzip": true,
      "metadata": [{ "name": "candid:service" }],
      "specified_id": "rrkah-fqaaa-aaaaa-aaaaq-cai"
    },
    "agentic-agent-registry": {
      "type": "custom",
      "build": "bash build-python-canister.sh agent-orchestration/ agent-registry",
      "candid": ".kybra/agent-orchestration/agent-registry/agent-registry.did",
      "wasm": ".kybra/agent-orchestration/agent-registry/agent-registry.wasm",
      "gzip": true,
      "metadata": [{ "name": "candid:service" }],
      "specified_id": "br5f7-7uaaa-aaaaa-qaaca-cai"
    },
    "agentic-client-agent": {
      "type": "custom",
      "build": "bash build-python-canister.sh agent-orchestration/ client-agent",
      "candid": ".kybra/agent-orchestration/client-agent/client-agent.did",
      "wasm": ".kybra/agent-orchestration/client-agent/client-agent.wasm",
      "gzip": true,
      "metadata": [{ "name": "candid:service" }],
      "specified_id": "bd3sg-teaaa-aaaaa-qaaba-cai"
    },
    "agentic-weather-agent": {
      "type": "custom",
      "build": "bash build-python-canister.sh agent-orchestration/ weather-agent",
      "candid": ".kybra/agent-orchestration/weather-agent/weather-agent.did",
      "wasm": ".kybra/agent-orchestration/weather-agent/weather-agent.wasm",
      "gzip": true,
      "metadata": [{ "name": "candid:service" }],
      "specified_id": "be2us-64aaa-aaaaa-qaabq-cai"
    },
    "agentic-airquality-agent": {
      "type": "custom",
      "build": "bash build-python-canister.sh agent-orchestration/ airquality-agent",
      "candid": ".kybra/agent-orchestration/airquality-agent/airquality-agent.did",
      "wasm": ".kybra/agent-orchestration/airquality-agent/airquality-agent.wasm",
      "gzip": true,
      "metadata": [{ "name": "candid:service" }],
      "specified_id": "bkyz2-fmaaa-aaaaa-qaaaq-cai"
    }
  },
  "defaults": {
    "build": {
      "args": "",
      "packtool": "mops sources"
    }
  },
  "output_env_file": ".env",
  "version": 1,
  "dfx": "0.25.0"
}
